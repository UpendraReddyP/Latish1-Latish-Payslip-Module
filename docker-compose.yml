version: '3.8'

services:
  employee_portal:
    container_name: attendance_employee_portal
    build: ./Employee_Portal
    ports:
      - "8164:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  hr_portal:
    container_name: attendance_hr_portal
    build: ./HR_Portal
    ports:
      - "8165:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  backend:
    container_name: attendance_backend
    build: ./Backend
    ports:
      - "3098:3098"
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - PGUSER=postgres
      - PGPASSWORD=admin123
      - PGDATABASE=employee_attendance
      - PGHOST=postgres
      - PGPORT=5432
      - NODE_ENV=production
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  postgres:
    container_name: attendance_postgres
    image: postgres:14
    ports:
      - "5098:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin123
      POSTGRES_DB: employee_attendance
    volumes:
      - pgdata_attendance:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  pgdata_attendance:

networks:
  app-network:
    driver: bridge